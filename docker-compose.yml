version: "2.0"

services:

  partners-db-cache:
    image: "redis:alpine"
    env_file: ./.env
    container_name: partners-db-cache
    networks:
      - partners-network
      - services
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
    command: redis-server --requirepass ${DB_REDIS_PASSWORD}


  partners-db:
    env_file: ./.env
    image: pablords/partners-db:1.0.0
    build:
      context: .
      dockerfile: Dockerfile.db
    restart: always
    container_name: partners-db
    ports:
      - 3306:3306
    networks:
      - partners-network
      - services
    volumes:
      - partners-db-data:/var/lib/mysql
      
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    command: --innodb_use_native_aio=0 --socket=/tmp/mysql.sock --bind_address=0.0.0.0


  partners-ms:
    restart: always
    env_file: ./.env
    image: pablords/partners-ms:1.0.0
    container_name: partners-ms
    depends_on:
      - partners-db
    build: .
    entrypoint: ./.docker/entrypoint.sh
    ports:
      - ${APP_PORT}:3001
    networks:
      - partners-network
      - services
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      DB_HOST: ${DB_HOST}
      DB_ENGINE: ${DB_ENGINE}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./:/home/node/app


networks:
  partners-network:
    driver: 'bridge'
  services:
      external: true
      driver: 'bridge'
volumes:
  partners-db-data:
  redisdata: